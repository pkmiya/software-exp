                         4 .list
                         5 *******************************
                         6 ** データ転送
                         7 *******************************
                         8 
                         9 .section .text
                        10 start:
000400 4EBA 0006        11     jsr     SEND            /* go to sub-routine*/
000404 4E72 2700        12     stop    #0x2700
                        13 SEND:
000408 48E7 0070        14     movem.l %a1-%a3, -(%a7) /* save registers */
00040c 43F9 0000        15     lea.l   DATA_2, %a1     /* specify data (DATA_1 or DATA_2) */
       0000             15 
                        16     
000412 45F9 0000        17     lea.l   BF_START, %a2
       0000             17 
000418 47F9 0000        18     lea.l   BF_END, %a3
       0000             18 
                        19 loop:
00041e 34D9             20     move.w  (%a1)+, (%a2)+  /* copy data (a1→a2) and increment both pointers */
000420 B5CB             21     cmpa.l  %a3, %a2
000422 6300 FFFA        22     bls     loop
000426 4CDF 0E00        23     movem.l (%a7)+, %a1-%a3 /* restore registers */
00042a 4E75             24     rts                     /* return from sub-routine */
                        25     
                        26 .section .data
                        27             .equ  BF_SIZE, 9                    /* buffer size */
00042c 0061 0062        28 DATA_1:     .dc.w 'a','b','c','d','e','f'       /* data (string) */
       0063 0064        28 
       0065 0066        28 
000438 0001 0002        29 DATA_2:     .dc.w 1, 2, 3, 4, 5, 6, 7, 8, 9, 0  /* data (integer) */
       0003 0004        29 
       0005 0006        29 
       0007 0008        29 
       0009 0000        29 
00044c 0000 0000        30 BF_START:   .ds.w BF_SIZE - 1                   /* buffer start */
       0000 0000        30 
       0000 0000        30 
       0000 0000        30 
00045c 0000             31 BF_END:     .ds.w 1                             /* buffer tail */
                        32 
                        33 .end
